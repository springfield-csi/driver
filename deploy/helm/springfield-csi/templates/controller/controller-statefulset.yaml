# All of the individual sidecar RBAC roles get bound
# to this account.
kind: ServiceAccount
apiVersion: v1
metadata:
  name: springfield-csi-sa
  namespace: springfield-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: springfield-csi
    app.kubernetes.io/component: attacher-cluster-role
  name: springfield-csi-attacher-cluster-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-attacher-runner
subjects:
- kind: ServiceAccount
  name: springfield-csi-sa
  namespace: springfield-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: springfield-csi
    app.kubernetes.io/component: health-monitor-controller-cluster-role
  name: springfield-csi-health-monitor-controller-cluster-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-health-monitor-controller-runner
subjects:
- kind: ServiceAccount
  name: springfield-csi-sa
  namespace: springfield-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: springfield-csi
    app.kubernetes.io/component: provisioner-cluster-role
  name: springfield-csi-provisioner-cluster-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-provisioner-runner
subjects:
- kind: ServiceAccount
  name: springfield-csi-sa
  namespace: springfield-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: springfield-csi
    app.kubernetes.io/component: resizer-cluster-role
  name: springfield-csi-resizer-cluster-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-resizer-runner
subjects:
- kind: ServiceAccount
  name: springfield-csi-sa
  namespace: springfield-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: springfield-csi
    app.kubernetes.io/component: snapshotter-cluster-role
  name: springfield-csi-snapshotter-cluster-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-snapshotter-runner
subjects:
- kind: ServiceAccount
  name: springfield-csi-sa
  namespace: springfield-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: springfield-csi
    app.kubernetes.io/component: attacher-role
  name: springfield-csi-attacher-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: external-attacher-cfg
subjects:
- kind: ServiceAccount
  name: springfield-csi-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: springfield-csi
    app.kubernetes.io/component: health-monitor-controller-role
  name: springfield-csi-health-monitor-controller-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: external-health-monitor-controller-cfg
subjects:
- kind: ServiceAccount
  name: springfield-csi-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: springfield-csi
    app.kubernetes.io/component: provisioner-role
  name: springfield-csi-provisioner-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: external-provisioner-cfg
subjects:
- kind: ServiceAccount
  name: springfield-csi-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: springfield-csi
    app.kubernetes.io/component: resizer-role
  name: springfield-csi-resizer-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: external-resizer-cfg
subjects:
- kind: ServiceAccount
  name: springfield-csi-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: springfield-csi
    app.kubernetes.io/component: snapshotter-role
  name: springfield-csi-snapshotter-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: external-snapshotter-leaderelection
subjects:
- kind: ServiceAccount
  name: springfield-csi-sa
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: springfield-csi
  labels:
    app.kubernetes.io/name: springfield-csi
    app.kubernetes.io/component: plugin
spec:
  serviceName: "springfield-csi"
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: springfield-csi
      app.kubernetes.io/component: plugin
  template:
    metadata:
      labels:
        app.kubernetes.io/name: springfield-csi
        app.kubernetes.io/component: plugin
    spec:
      serviceAccountName: springfield-csi-sa
      containers:
        - name: springfield-csi-driver
          image: ghcr.io/trgill/springfield-csi-driver:devel
          args:
            - --blockdevs={{.Values.blockdevs}}
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          securityContext:
            privileged: true
          ports:
          - containerPort: 9898
            name: healthz
            protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: dbus-socket
              mountPath: /var/run/dbus
              mountPropagation: Bidirectional

        - name: csi-external-health-monitor-controller
          image: registry.k8s.io/sig-storage/csi-external-health-monitor-controller:v0.6.0
          args:
            - "--v=6"
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi

        - name: liveness-probe
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          image: registry.k8s.io/sig-storage/livenessprobe:v2.7.0
          args:
          - --csi-address=/csi/csi.sock
          - --health-port=9898

        - name: csi-attacher
          image: registry.k8s.io/sig-storage/csi-attacher:v4.2.0
          args:
            - --v=6
            - --csi-address=/csi/csi.sock
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /csi
            name: socket-dir

        - name: csi-provisioner
          image: registry.k8s.io/sig-storage/csi-provisioner:v3.3.0
          args:
            - -v=6
            - --csi-address=/csi/csi.sock
            - --feature-gates=Topology=false
            - --strict-topology=false
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container.
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir

      volumes:
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi-springfield
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: stratis-dir
          hostPath:
            path: /stratis
            type: Directory
        - name: dbus-socket
          hostPath:
            path: /host_dbus
            type: Directory
        - name: pod-volumes-dir
          hostPath:
            path: /var/lib/kubelet/pods/
            type: DirectoryOrCreate
        - name: csi-plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/kubernetes.io/csi
            type: DirectoryOrCreate