apiVersion: v1
kind: ServiceAccount
metadata:
  name: springfield-node-sa
  namespace: springfield-system
  labels:
    helm.sh/chart: springfield-csi
    app.kubernetes.io/name: springfield-csi
    app.kubernetes.io/instance: springfield-csi
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: springfield-system:node
  labels:
    helm.sh/chart: springfield-csi
    app.kubernetes.io/name: springfield-csi
    app.kubernetes.io/instance: springfield-csi
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: springfield-node-sa
    namespace: springfield-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: springfield-system:node

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: springfield-node
  namespace: springfield-system
  labels:
    helm.sh/chart: springfield-csi
    app.kubernetes.io/name: springfield-csi
    app.kubernetes.io/instance: springfield-csi
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: node
      app.kubernetes.io/name: springfield-csi
      app.kubernetes.io/instance: springfield-csi
  template:
    metadata:
      labels:
        app.kubernetes.io/component: node
        app.kubernetes.io/name: springfield-csi
        app.kubernetes.io/instance: springfield-csi
      annotations: 
        prometheus.io/port: metrics
    spec:
      serviceAccountName: springfield-node-sa
      containers:
        - name: springfield-csi-node
          image: ghcr.io/trgill/springfield-csi-driver:devel
          args:
            - "--nodeonly"
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          securityContext:
            privileged: true
          ports:
          - containerPort: 9808
            name: healthz
            protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          volumeMounts:
            - name: node-socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
            - mountPath: /var/run/dbus
              name: dbus-socket
            - name: stratis-dir
              mountPath: /stratis
            - name: pod-volumes-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: "Bidirectional"
            - name: csi-plugin-dir
              mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi
              mountPropagation: "Bidirectional"

        - name: liveness-probe
          image: registry.k8s.io/sig-storage/livenessprobe:v2.7.0
          args:
          - --csi-address=/csi/csi.sock
          - --health-port=9808
          volumeMounts:
            - name: node-socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration

        - name: csi-driver-registrar
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.6.3
          args:
            - "--csi-address=/csi/csi.sock"
            - "--kubelet-registration-path=/var/lib/kubelet/plugins/springfield.csi.redhat.com/csi.sock"
            - "--health-port=9809"
          volumeMounts:
            - name: node-socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
            
          ports:
            - containerPort: 9809
              name: healthz
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 5
            timeoutSeconds: 5

      hostNetwork: true

      volumes:
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: node-socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/springfield.csi.redhat.com/
            type: DirectoryOrCreate
        - name: dbus-socket
          hostPath:
            path: /host_dbus
            type: Directory
        - name: stratis-dir
          hostPath:
            path: /stratis
            type: Directory
        - name: pod-volumes-dir
          hostPath:
            path: /var/lib/kubelet/pods/
            type: DirectoryOrCreate
        - name: csi-plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/kubernetes.io/csi
            type: DirectoryOrCreate